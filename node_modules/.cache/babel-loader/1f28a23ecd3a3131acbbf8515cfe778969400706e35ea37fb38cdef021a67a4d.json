{"ast":null,"code":"\n\n// import React,{ useState } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n\n//   //state -Hooks usestate\n//   const [newItem, setNewItem] = useState(\"\");\n//   const [items, setItems] = useState([]);\n//   //update\n//   const [updateitem, setUpdateItem] = useState(\"\");\n//   const [editShow, setShowEdit] = useState(-1);\n\n//   const handleChange = (e) => {\n//     const value = e.target.value;\n//     setNewItem(value);\n//   };\n\n//   //edit\n//   const edit=(id,newText)=>{\n//     const current=items.filter((item)=>item.id===id);\n//     const item={\n// id:current.id,\n// value:newText,\n//     }\n// deleteItem(id);\n\n// setItems((oldItem)=>[...oldItem,item]);\n// setUpdateItem(\"\");\n// setShowEdit(-1);\n//   }\n\n//   //helper function\n//   const addset = () => {\n//     if (!newItem) {\n//       alert(\"Enter an Item.\");\n//       return;\n//     }\n//     const item = {\n//       id: Math.floor(Math.random() * 1000),\n//       value: newItem,\n//     };\n//     setItems((oldItem) => [...oldItem, item]);\n\n//     setNewItem(\"\");\n//   };\n//   /// Enter key through submit \n//   const keySubmit = (e) => {\n//     if (e.key === \"Enter\") {\n//       addset();\n//     }\n//   };\n\n//   ///Delete function\n//   const deleteItem = (id) => {\n//     const NewArray = items.filter((item) => item.id !== id);\n//     setItems(NewArray);\n//   };\n//   return (\n//     <div className=\"App\">\n//       {/* Header */}\n//       <h1>Todo List App</h1>\n//       {/* Input Field */}\n//       {editShow===-1?<div><input\n//       type=\"text\"\n//       name=\"name\"\n//       id=\"txtfield\"\n//       onKeyPress={keySubmit}\n//       onChange={handleChange}\n//       placeholder=\"Add an item..\"\n//       value={newItem || \"\"}\n//     ></input>\n//     <button onClick={(e) => addset()}>Add</button>\n//     </div>:\n// console.log(updateitem)\n//       //  <div>\n\n//       //  <input type=\"text\" \n//       //  value={updateitem}\n//       //  onChange={(e)=>setUpdateItem(e.target.value)}\n\n//       //  ></input>\n//       //  <button onClick={() => edit(items.id, updateitem)}>\n//       //               Update\n//       //             </button> \n//       // </div>\n\n//        }\n\n//       {/* <input\n//         type=\"text\"\n//         name=\"name\"\n//         id=\"txtfield\"\n//         onKeyPress={keySubmit}\n//         onChange={handleChange}\n//         placeholder=\"Add an item..\"\n//         value={newItem || \"\"}\n//       ></input>\n\n//       <button onClick={(e) => addset()}>Add</button> */}\n//       {/* Unordered List */}\n\n//       <ul>\n\n//         {\n//         items.map((item) => {\n//         return(  \n//             <div>\n//             <li key={item.id} >\n//             {item.value}\n//             <button className=\"btn-del\" onClick={() => setShowEdit(item.id)}>\n//             üìò\n//             </button> \n//             <button className=\"btn-del\" onClick={() => deleteItem(item.id)}>\n//               ‚ùå\n//             </button>\n//           </li>\n//           {/* {editShow===item.id ?\n//       <div>\n//        <input type=\"text\" \n//        value={updateitem}\n//        onChange={(e)=>setUpdateItem(e.target.value)}\n\n//        ></input>\n//        <button onClick={() => edit(item.id, updateitem)}>\n//                     Update\n//                   </button> \n//       </div>\n//       :null} */}\n//           </div>\n//         )})\n//         }\n//       </ul>\n\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["E:/React_data/React_pratice/todoapp/src/App.js"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n// import React,{ useState } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n\n\n//   //state -Hooks usestate\n//   const [newItem, setNewItem] = useState(\"\");\n//   const [items, setItems] = useState([]);\n//   //update\n//   const [updateitem, setUpdateItem] = useState(\"\");\n//   const [editShow, setShowEdit] = useState(-1);\n\n//   const handleChange = (e) => {\n//     const value = e.target.value;\n//     setNewItem(value);\n//   };\n\n//   //edit\n//   const edit=(id,newText)=>{\n//     const current=items.filter((item)=>item.id===id);\n//     const item={\n// id:current.id,\n// value:newText,\n//     }\n// deleteItem(id);\n\n// setItems((oldItem)=>[...oldItem,item]);\n// setUpdateItem(\"\");\n// setShowEdit(-1);\n//   }\n\n//   //helper function\n//   const addset = () => {\n//     if (!newItem) {\n//       alert(\"Enter an Item.\");\n//       return;\n//     }\n//     const item = {\n//       id: Math.floor(Math.random() * 1000),\n//       value: newItem,\n//     };\n//     setItems((oldItem) => [...oldItem, item]);\n\n//     setNewItem(\"\");\n//   };\n//   /// Enter key through submit \n//   const keySubmit = (e) => {\n//     if (e.key === \"Enter\") {\n//       addset();\n//     }\n//   };\n\n\n//   ///Delete function\n//   const deleteItem = (id) => {\n//     const NewArray = items.filter((item) => item.id !== id);\n//     setItems(NewArray);\n//   };\n//   return (\n//     <div className=\"App\">\n//       {/* Header */}\n//       <h1>Todo List App</h1>\n//       {/* Input Field */}\n//       {editShow===-1?<div><input\n//       type=\"text\"\n//       name=\"name\"\n//       id=\"txtfield\"\n//       onKeyPress={keySubmit}\n//       onChange={handleChange}\n//       placeholder=\"Add an item..\"\n//       value={newItem || \"\"}\n//     ></input>\n//     <button onClick={(e) => addset()}>Add</button>\n//     </div>:\n// console.log(updateitem)\n//       //  <div>\n\n//       //  <input type=\"text\" \n//       //  value={updateitem}\n//       //  onChange={(e)=>setUpdateItem(e.target.value)}\n       \n//       //  ></input>\n//       //  <button onClick={() => edit(items.id, updateitem)}>\n//       //               Update\n//       //             </button> \n//       // </div>\n      \n            \n      \n      \n//        }\n       \n//       {/* <input\n//         type=\"text\"\n//         name=\"name\"\n//         id=\"txtfield\"\n//         onKeyPress={keySubmit}\n//         onChange={handleChange}\n//         placeholder=\"Add an item..\"\n//         value={newItem || \"\"}\n//       ></input>\n\n//       <button onClick={(e) => addset()}>Add</button> */}\n//       {/* Unordered List */}\n      \n//       <ul>\n      \n//         {\n//         items.map((item) => {\n//         return(  \n//             <div>\n//             <li key={item.id} >\n//             {item.value}\n//             <button className=\"btn-del\" onClick={() => setShowEdit(item.id)}>\n//             üìò\n//             </button> \n//             <button className=\"btn-del\" onClick={() => deleteItem(item.id)}>\n//               ‚ùå\n//             </button>\n//           </li>\n//           {/* {editShow===item.id ?\n//       <div>\n//        <input type=\"text\" \n//        value={updateitem}\n//        onChange={(e)=>setUpdateItem(e.target.value)}\n       \n//        ></input>\n//        <button onClick={() => edit(item.id, updateitem)}>\n//                     Update\n//                   </button> \n//       </div>\n//       :null} */}\n//           </div>\n//         )})\n//         }\n//       </ul>\n      \n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n"],"mappings":";;AAaA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}